name: Dash App CI

on:
  push:
    branches:
      - main


jobs:
  # Step 1: Test the app using Docker
  test:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Build the Docker image for testing
      - name: Build Docker image for testing
        run: docker build -t car_prediction_v3 -f code/Dockerfile code

      # Run tests inside the Docker container
      - name: Run tests in Docker
        run: docker run car_prediction_v3 pytest

  build:
    runs-on: ubuntu-latest
    needs: test  # Build only after tests pass
    
    steps:
      # Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build the Docker image for the app
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/car_prediction_v3:latest -f code/Dockerfile code

      # Push the image to DockerHub
      - name: Push Docker image to DockerHub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/car_prediction_v3:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Step 1: Add SSH private key for authentication
      - name: Add SSH private key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}  # Retrieves the private SSH key from GitHub Secrets
          name: id_rsa  # Saves the key as ~/.ssh/id_rsa on the runner

      # Step 2: Set up known hosts for both the proxy and target servers
      - name: Setup SSH known hosts
        run: |
          ssh-keyscan -H bazooka.cs.ait.ac.th >> ~/.ssh/known_hosts
          ssh-keyscan -H ml.brain.cs.ait.ac.th >> ~/.ssh/known_hosts

      # Step 3: SSH into the target server via the proxy and run docker-compose
      - name: SSH into server and run deployment
        run: |
          ssh -i ~/.ssh/id_rsa -o ProxyJump=st125287@bazooka.cs.ait.ac.th st125287@ml.brain.cs.ait.ac.th << EOF
            # Pull the latest image from Docker Hub
            docker pull bidhan01/car_prediction_v3:latest
            
            # Navigate to the directory with the docker-compose file
            cd st125287/docker-compose.yaml
            
            # Bring down the existing containers
            docker-compose down --remove-orphans
            
            # Bring up the containers with the new image
            docker-compose up -d
          EOF
